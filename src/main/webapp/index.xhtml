<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:p="http://primefaces.org/ui"
      xmlns:f="http://xmlns.jcp.org/jsf/core">

    <h:head>
        <h:outputStylesheet name="css/default.css" />
        <h:outputScript name="js/locationLogMap.js" library="js"/>
        <!-- JYFR: Para que funcionen los mapas de Google Maps. Además, no puede estar encerrado en ningún panel -->
        <script src="https://maps.google.com/maps/api/js?key=AIzaSyC-ERfFaO2TCQcdRXPTI3P6CL4Qxwd675U" type="text/javascript" ></script>
        <script>
            //<![CDATA[
            function handleComplete(xhr, status, args) {
                if (args !== undefined) {
                    var map = PF('gmap').getMap();

                    for (var i in map.markers) {
                        var marker = map.markers[i];

                        var icon = "icon_" + marker["id"];
                        if (args.hasOwnProperty(icon)) {
                            marker.setIcon(args[icon]);
                        }
                        var title = "title_" + marker["id"];
                        if (args.hasOwnProperty(title)) {
                            marker.setTitle(args[title]);
                        }
                        var latLng = "latLng_" + marker["id"];
                        if (args.hasOwnProperty(latLng)) {
                            var comp = args[latLng].split(",");
                            if (comp.length === 2) {
                                marker.setPosition(new google.maps.LatLng(comp[0], comp[1]));
                            }
                        }
                    }
                }
            }
            // ]]>
        </script>
    </h:head>
    <h:body>
        <h:form id="SimulatorMapForm">
            <p:poll id="gmapUpdater" widgetVar="gmapUpdaterVar" interval="2" listener="#{simulatorController.getCurrentLatLng()}" oncomplete="handleComplete(xhr, status, args)" />
            <p:layout fullPage="true">
                <p:layoutUnit position="west" resizable="false" size="300" header="#{bundle.TrackConditions}">
                    <h:panelGrid columns="1" style="padding: 5px;">
                        <h:outputText id="outputDistanceFromSevilleCenter" value="#{bundle.DistanceFromSevilleCenter} #{simulatorController.distanceFromSevilleCenter} Km" />
                        <h:inputHidden id="distanceFromSevilleCenter" value="#{simulatorController.distanceFromSevilleCenter}"/>
                        <p:slider for="distanceFromSevilleCenter" minValue="0" maxValue="100" display="outputDistanceFromSevilleCenter" displayTemplate="#{bundle.DistanceFromSevilleCenter} {value} Km"/>

                        <h:outputText id="outputTrackDistance" value="#{bundle.TrackDistance} #{simulatorController.distance} Km" />
                        <h:inputHidden id="distance" value="#{simulatorController.distance}"/>
                        <p:slider for="distance" minValue="1" maxValue="100" display="outputTrackDistance" displayTemplate="#{bundle.TrackDistance} {value} Km"/>

                        <h:outputText id="outputTracksAmount" value="#{bundle.TracksAmount} #{simulatorController.tracksAmount}" />
                        <h:inputHidden id="tracksAmount" value="#{simulatorController.tracksAmount}"/>
                        <p:slider for="tracksAmount" minValue="1" maxValue="100" display="outputTracksAmount" displayTemplate="#{bundle.TracksAmount} {value}"/>

                        <p:commandButton id="generateButton" value="#{bundle.GenerateTracks}" action="#{simulatorController.generateSimulatedTracks()}" update="gmap" disabled="#{simulatorController.isSimulating()}"/>
                        <p:separator />

                        <h:outputText id="outputSimulatedSmartDrivers" value="#{bundle.SimulatedSmartDriversPerTrack} #{simulatorController.simulatedSmartDrivers}" />
                        <h:inputHidden id="simulatedSmartDrivers" value="#{simulatorController.simulatedSmartDrivers}"/>
                        <p:slider for="simulatedSmartDrivers" minValue="1" maxValue="10000" display="outputSimulatedSmartDrivers" displayTemplate="#{bundle.SimulatedSmartDriversPerTrack} {value}"/>

						<p:selectBooleanCheckbox value="#{simulatorController.retryOnFail}" itemLabel="#{bundle.RetryOnFail}" style="padding-top: 2px" />
                        <p:commandButton widgetVar="simulateButtonVar" id="simulateButton" value="#{simulatorController.isSimulating() ? bundle.StopSimulation : bundle.StartSimulation}" action="#{simulatorController.realTimeSimulate()}" update="gmapUpdater, gmap, generateButton, simulateButton" style="padding-top: 5px;"/>
                    </h:panelGrid>
                </p:layoutUnit>

                <p:layoutUnit position="center">
                    <!-- FIXME: Poner 'fitBounds' cuando se corrija el 'bug' que tiene Primefaces con Google Maps -->
                    <p:gmap id="gmap" widgetVar="gmap" center="#{simulatorController.markerLatitudeLongitude}" zoom="10" type="ROADMAP" model="#{simulatorController.simulatedMapModel}" style="height:100%" fitBounds="true">
                        <p:ajax event="overlaySelect" listener="#{simulatorController.onMarkerSelect}"/>
                        <p:gmapInfoWindow id="infoWindow">
                            <p:outputPanel style="text-align: center; display: block; margin: auto">
                                <h:outputText value="#{simulatorController.marker.title}" />
                            </p:outputPanel>
                        </p:gmapInfoWindow>
                    </p:gmap>

                </p:layoutUnit>
            </p:layout>
        </h:form>
    </h:body>
</html>